CCS PCM C Compiler, Version 5.015, 5967               29-May-25 15:01

               Filename:   E:\University\Nam 3\2024_2025_HK2\Vi xu ly\Giai_de_vxl_hk2_2022\Cau1\Cau1.lst

               ROM used:   372 words (5%)
                           Largest free fragment is 2048
               RAM used:   26 (7%) at main() level
                           28 (8%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0BC
0003:  NOP
.................... #include<16f887.h> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
....................  
.................... #list 
....................  
.................... #fuses hs 
.................... #use delay(clock=8M) 
*
0022:  MOVLW  34
0023:  MOVWF  04
0024:  BCF    03.7
0025:  MOVF   00,W
0026:  BTFSC  03.2
0027:  GOTO   035
0028:  MOVLW  02
0029:  MOVWF  78
002A:  CLRF   77
002B:  DECFSZ 77,F
002C:  GOTO   02B
002D:  DECFSZ 78,F
002E:  GOTO   02A
002F:  MOVLW  97
0030:  MOVWF  77
0031:  DECFSZ 77,F
0032:  GOTO   031
0033:  DECFSZ 00,F
0034:  GOTO   028
0035:  RETURN
....................  
.................... #define N1     pin_d1 
.................... #define N2     pin_d2 
.................... #define N3     pin_d3 
.................... #define N4     pin_d4 
.................... #define N5     pin_d5 
....................  
.................... #define SHOW   pin_e1 
....................  
.................... #define lcd_rs       pin_b5 
.................... #define lcd_rw       pin_b6 
.................... #define lcd_e        pin_b7 
.................... #define output_lcd   output_c 
.................... #include<tv_lcd.c> 
.................... void lcd_command(int8 a) 
.................... { 
....................       output_low(lcd_rw); 
*
0004:  BSF    03.5
0005:  BCF    06.6
0006:  BCF    03.5
0007:  BCF    06.6
....................       output_low(lcd_rs); 
0008:  BSF    03.5
0009:  BCF    06.5
000A:  BCF    03.5
000B:  BCF    06.5
....................       output_lcd(a); 
000C:  MOVLW  00
000D:  MOVWF  20
000E:  BSF    03.5
000F:  CLRF   07
0010:  BCF    03.5
0011:  MOVF   34,W
0012:  MOVWF  07
....................       output_high(lcd_e); 
0013:  BSF    03.5
0014:  BCF    06.7
0015:  BCF    03.5
0016:  BSF    06.7
....................       output_low(lcd_e); 
0017:  BSF    03.5
0018:  BCF    06.7
0019:  BCF    03.5
001A:  BCF    06.7
....................       delay_us(200); 
001B:  MOVLW  84
001C:  MOVWF  77
001D:  DECFSZ 77,F
001E:  GOTO   01D
001F:  GOTO   020
0020:  NOP
0021:  RETURN
.................... } 
.................... void lcd_data(int8 a) 
.................... { 
....................       output_low(lcd_rw); 
*
0048:  BSF    03.5
0049:  BCF    06.6
004A:  BCF    03.5
004B:  BCF    06.6
....................       output_high(lcd_rs); 
004C:  BSF    03.5
004D:  BCF    06.5
004E:  BCF    03.5
004F:  BSF    06.5
....................       output_lcd(a); 
0050:  MOVLW  00
0051:  MOVWF  20
0052:  BSF    03.5
0053:  CLRF   07
0054:  BCF    03.5
0055:  MOVF   35,W
0056:  MOVWF  07
....................       output_high(lcd_e); 
0057:  BSF    03.5
0058:  BCF    06.7
0059:  BCF    03.5
005A:  BSF    06.7
....................       output_low(lcd_e); 
005B:  BSF    03.5
005C:  BCF    06.7
005D:  BCF    03.5
005E:  BCF    06.7
....................       delay_us(200); 
005F:  MOVLW  84
0060:  MOVWF  77
0061:  DECFSZ 77,F
0062:  GOTO   061
0063:  GOTO   064
0064:  NOP
0065:  RETURN
.................... } 
.................... void lcd_setup() 
.................... { 
....................       lcd_command(0x38); delay_ms(5); 
*
0036:  MOVLW  38
0037:  MOVWF  34
0038:  CALL   004
0039:  MOVLW  05
003A:  MOVWF  34
003B:  CALL   022
....................       lcd_command(0x0c);  
003C:  MOVLW  0C
003D:  MOVWF  34
003E:  CALL   004
....................       lcd_command(0x01); delay_ms(2); 
003F:  MOVLW  01
0040:  MOVWF  34
0041:  CALL   004
0042:  MOVLW  02
0043:  MOVWF  34
0044:  CALL   022
0045:  BCF    0A.3
0046:  BCF    0A.4
0047:  GOTO   0F2 (RETURN)
.................... } 
....................  
....................  
.................... unsigned int8 key, i, hang1[17]={                  }; 
*
00D1:  BCF    03.6
00D2:  CLRF   23
00D3:  CLRF   24
00D4:  CLRF   25
00D5:  CLRF   26
00D6:  CLRF   27
00D7:  CLRF   28
00D8:  CLRF   29
00D9:  CLRF   2A
00DA:  CLRF   2B
00DB:  CLRF   2C
00DC:  CLRF   2D
00DD:  CLRF   2E
00DE:  CLRF   2F
00DF:  CLRF   30
00E0:  CLRF   31
00E1:  CLRF   32
00E2:  CLRF   33
....................  
.................... void lcd_dich_pst_key()//dich lcd tu trai sang phai khi nhan du lieu 
.................... { 
....................    for(i=0;i<15;i++) hang1[i]=hang1[i+1]; 
*
0066:  CLRF   22
0067:  MOVF   22,W
0068:  SUBLW  0E
0069:  BTFSS  03.0
006A:  GOTO   085
006B:  MOVLW  23
006C:  ADDWF  22,W
006D:  MOVWF  78
006E:  CLRF   7A
006F:  BTFSC  03.0
0070:  INCF   7A,F
0071:  MOVF   78,W
0072:  MOVWF  34
0073:  MOVF   7A,W
0074:  MOVWF  35
0075:  MOVLW  01
0076:  ADDWF  22,W
0077:  ADDLW  23
0078:  MOVWF  04
0079:  BCF    03.7
007A:  MOVF   00,W
007B:  MOVWF  36
007C:  MOVF   34,W
007D:  MOVWF  04
007E:  BCF    03.7
007F:  BTFSC  35.0
0080:  BSF    03.7
0081:  MOVF   36,W
0082:  MOVWF  00
0083:  INCF   22,F
0084:  GOTO   067
....................    hang1[15]=key+0x30; 
0085:  MOVLW  30
0086:  ADDWF  21,W
0087:  MOVWF  32
....................    lcd_command(0x80); 
0088:  MOVLW  80
0089:  MOVWF  34
008A:  CALL   004
....................    for(i=0;i<16;i++) lcd_data(hang1[i]); 
008B:  CLRF   22
008C:  MOVF   22,W
008D:  SUBLW  0F
008E:  BTFSS  03.0
008F:  GOTO   09A
0090:  MOVLW  23
0091:  ADDWF  22,W
0092:  MOVWF  04
0093:  BCF    03.7
0094:  MOVF   00,W
0095:  MOVWF  34
0096:  MOVWF  35
0097:  CALL   048
0098:  INCF   22,F
0099:  GOTO   08C
009A:  RETURN
.................... } 
....................  
.................... void loc_chan_va_ht_dong2() // loc so chan, so le thay bang khoang trang 
.................... { 
....................    lcd_command(0xC0);  
009B:  MOVLW  C0
009C:  MOVWF  34
009D:  CALL   004
....................    for(i = 0; i < 16; i++) 
009E:  CLRF   22
009F:  MOVF   22,W
00A0:  SUBLW  0F
00A1:  BTFSS  03.0
00A2:  GOTO   0B9
....................    { 
....................       if((hang1[i]) % 2 == 0) 
00A3:  MOVLW  23
00A4:  ADDWF  22,W
00A5:  MOVWF  04
00A6:  BCF    03.7
00A7:  MOVF   00,W
00A8:  ANDLW  01
00A9:  BTFSS  03.2
00AA:  GOTO   0B4
....................          lcd_data(hang1[i]); 
00AB:  MOVLW  23
00AC:  ADDWF  22,W
00AD:  MOVWF  04
00AE:  BCF    03.7
00AF:  MOVF   00,W
00B0:  MOVWF  34
00B1:  MOVWF  35
00B2:  CALL   048
00B3:  GOTO   0B7
....................       else 
....................          lcd_data(' '); 
00B4:  MOVLW  20
00B5:  MOVWF  35
00B6:  CALL   048
00B7:  INCF   22,F
00B8:  GOTO   09F
....................    } 
00B9:  BCF    0A.3
00BA:  BCF    0A.4
00BB:  GOTO   16D (RETURN)
.................... } 
....................  
.................... void main() 
00BC:  MOVF   03,W
00BD:  ANDLW  1F
00BE:  MOVWF  03
00BF:  MOVLW  FF
00C0:  MOVWF  20
00C1:  BSF    03.5
00C2:  BSF    03.6
00C3:  MOVF   09,W
00C4:  ANDLW  C0
00C5:  MOVWF  09
00C6:  BCF    03.6
00C7:  BCF    1F.4
00C8:  BCF    1F.5
00C9:  MOVLW  00
00CA:  BSF    03.6
00CB:  MOVWF  08
00CC:  BCF    03.5
00CD:  CLRF   07
00CE:  CLRF   08
00CF:  CLRF   09
00D0:  BCF    03.7
.................... { 
....................    set_tris_c(0); 
*
00E3:  MOVLW  00
00E4:  BSF    03.5
00E5:  MOVWF  07
00E6:  BCF    03.5
00E7:  MOVWF  20
....................    set_tris_b(0); 
00E8:  BSF    03.5
00E9:  MOVWF  06
....................    set_tris_d(0xff); 
00EA:  MOVLW  FF
00EB:  MOVWF  08
....................    set_tris_e(0xff); 
00EC:  BSF    09.0
00ED:  BSF    09.1
00EE:  BSF    09.2
00EF:  BSF    09.3
....................  
....................    lcd_setup(); 
00F0:  BCF    03.5
00F1:  GOTO   036
....................  
....................    while(true) 
....................    { 
....................       if(input(N1)==0)     {delay_ms(20); if(input(N1)==0){key=1; lcd_dich_pst_key(); while(input(N1)==0);}} 
00F2:  BSF    03.5
00F3:  BSF    08.1
00F4:  BCF    03.5
00F5:  BTFSC  08.1
00F6:  GOTO   108
00F7:  MOVLW  14
00F8:  MOVWF  34
00F9:  CALL   022
00FA:  BSF    03.5
00FB:  BSF    08.1
00FC:  BCF    03.5
00FD:  BTFSC  08.1
00FE:  GOTO   107
00FF:  MOVLW  01
0100:  MOVWF  21
0101:  CALL   066
0102:  BSF    03.5
0103:  BSF    08.1
0104:  BCF    03.5
0105:  BTFSS  08.1
0106:  GOTO   102
0107:  GOTO   15F
....................       else if(input(N2)==0){delay_ms(20); if(input(N2)==0){key=2; lcd_dich_pst_key(); while(input(N2)==0);}} 
0108:  BSF    03.5
0109:  BSF    08.2
010A:  BCF    03.5
010B:  BTFSC  08.2
010C:  GOTO   11E
010D:  MOVLW  14
010E:  MOVWF  34
010F:  CALL   022
0110:  BSF    03.5
0111:  BSF    08.2
0112:  BCF    03.5
0113:  BTFSC  08.2
0114:  GOTO   11D
0115:  MOVLW  02
0116:  MOVWF  21
0117:  CALL   066
0118:  BSF    03.5
0119:  BSF    08.2
011A:  BCF    03.5
011B:  BTFSS  08.2
011C:  GOTO   118
011D:  GOTO   15F
....................       else if(input(N3)==0){delay_ms(20); if(input(N3)==0){key=3; lcd_dich_pst_key(); while(input(N3)==0);}} 
011E:  BSF    03.5
011F:  BSF    08.3
0120:  BCF    03.5
0121:  BTFSC  08.3
0122:  GOTO   134
0123:  MOVLW  14
0124:  MOVWF  34
0125:  CALL   022
0126:  BSF    03.5
0127:  BSF    08.3
0128:  BCF    03.5
0129:  BTFSC  08.3
012A:  GOTO   133
012B:  MOVLW  03
012C:  MOVWF  21
012D:  CALL   066
012E:  BSF    03.5
012F:  BSF    08.3
0130:  BCF    03.5
0131:  BTFSS  08.3
0132:  GOTO   12E
0133:  GOTO   15F
....................       else if(input(N4)==0){delay_ms(20); if(input(N4)==0){key=4; lcd_dich_pst_key(); while(input(N4)==0);}} 
0134:  BSF    03.5
0135:  BSF    08.4
0136:  BCF    03.5
0137:  BTFSC  08.4
0138:  GOTO   14A
0139:  MOVLW  14
013A:  MOVWF  34
013B:  CALL   022
013C:  BSF    03.5
013D:  BSF    08.4
013E:  BCF    03.5
013F:  BTFSC  08.4
0140:  GOTO   149
0141:  MOVLW  04
0142:  MOVWF  21
0143:  CALL   066
0144:  BSF    03.5
0145:  BSF    08.4
0146:  BCF    03.5
0147:  BTFSS  08.4
0148:  GOTO   144
0149:  GOTO   15F
....................       else if(input(N5)==0){delay_ms(20); if(input(N5)==0){key=5; lcd_dich_pst_key(); while(input(N5)==0);}} 
014A:  BSF    03.5
014B:  BSF    08.5
014C:  BCF    03.5
014D:  BTFSC  08.5
014E:  GOTO   15F
014F:  MOVLW  14
0150:  MOVWF  34
0151:  CALL   022
0152:  BSF    03.5
0153:  BSF    08.5
0154:  BCF    03.5
0155:  BTFSC  08.5
0156:  GOTO   15F
0157:  MOVLW  05
0158:  MOVWF  21
0159:  CALL   066
015A:  BSF    03.5
015B:  BSF    08.5
015C:  BCF    03.5
015D:  BTFSS  08.5
015E:  GOTO   15A
....................        
....................       if(input(SHOW)==0){delay_ms(20);if(input(SHOW) == 0){loc_chan_va_ht_dong2();while(input(SHOW) == 0);}} 
015F:  BSF    03.5
0160:  BSF    09.1
0161:  BCF    03.5
0162:  BTFSC  09.1
0163:  GOTO   172
0164:  MOVLW  14
0165:  MOVWF  34
0166:  CALL   022
0167:  BSF    03.5
0168:  BSF    09.1
0169:  BCF    03.5
016A:  BTFSC  09.1
016B:  GOTO   172
016C:  GOTO   09B
016D:  BSF    03.5
016E:  BSF    09.1
016F:  BCF    03.5
0170:  BTFSS  09.1
0171:  GOTO   16D
0172:  GOTO   0F2
....................    } 
.................... } 
....................  
0173:  SLEEP
.................... /*#include<16f887.h> 
.................... #fuses hs 
.................... #use delay(clock=8M) 
....................  
.................... #define     lcd_rs       pin_b5     
.................... #define     lcd_rw       pin_b6 
.................... #define     lcd_e        pin_b7 
.................... #define     output_lcd   output_c 
.................... #include<tv_lcd.c>   
....................  
.................... unsigned int8 ht[17]= {                    }; 
.................... signed int8 n; 
.................... void dichktnhap(unsigned int8 kt) 
.................... { 
....................      for(n=15;n>0;n--)     // Xu ly dich ky tu 
....................           ht[n]= ht[n-1]; 
....................      ht[0]=kt+0x30;  
....................       
....................      lcd_command(0x80);    // Hien thi ra man hinh 
....................      for(n=15;n>=0;n--) 
....................        lcd_data(ht[n]); 
.................... } 
.................... int1 inputcd(int16 pin) 
.................... { 
....................          if(input(pin)==0) 
....................             { 
....................                   delay_ms(20); 
....................                   if(input(pin)==0) 
....................                   { 
....................                         while(input(pin)==0); 
....................                         return 0; 
....................                   } 
....................             } 
....................             return 1; 
.................... } 
.................... void main() 
.................... { 
....................       set_tris_b(0); 
....................       set_tris_c(0); 
....................       set_tris_d(0xff); 
....................       set_tris_e(0xff); 
....................        
....................       lcd_setup();  
....................        
....................       while(true) 
....................       { 
....................             if(inputcd(pin_d1)==0)dichktnhap(1); 
....................             if(inputcd(pin_d2)==0)dichktnhap(2); 
....................             if(inputcd(pin_d3)==0)dichktnhap(3); 
....................             if(inputcd(pin_d4)==0)dichktnhap(4); 
....................             if(inputcd(pin_d5)==0)dichktnhap(5);   
....................             if(input(pin_e1)==0) 
....................             { 
....................                  lcd_command(0xc0);   
....................                  for(n=15;n>=0;n--) 
....................                    if(ht[n]%2==0)lcd_data(ht[n]);  
....................                    else          lcd_data(' ');  
....................                          
....................             } 
....................              
....................       }      
.................... } 
.................... */ 

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
