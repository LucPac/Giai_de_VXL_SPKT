CCS PCM C Compiler, Version 5.015, 5967               26-May-25 21:28

               Filename:   E:\University\Nam 3\2024_2025_HK2\Vi xu ly\Giai_de_vxl_hk2_22\Cau1,2\PicA.lst

               ROM used:   1059 words (13%)
                           Largest free fragment is 2048
               RAM used:   27 (7%) at main() level
                           47 (13%) worst case
               Stack used: 3 locations (2 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  03
0001:  MOVWF  0A
0002:  GOTO   3D2
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.5
001A:  GOTO   01D
001B:  BTFSC  0C.5
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   03F
.................... /* 
.................... SS = (Vref+ - Vref-)/(2^n - 1) = 4.887 mV 
....................  
.................... PR2 = [(T*Fosc)/(4*T2_prescale)] - 1 = 249 
.................... HSCK_max = (PR2 + 1)*4 = 1000 
.................... HSCK_25% = 25%*HSCK_max = 250 
.................... HSCK_50% = 50%*HSCK_max = 500 
.................... HSCK_75% = 75%*HSCK_max = 750 
.................... */ 
.................... #include<16f887.h> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
0031:  BCF    0A.0
0032:  BCF    0A.1
0033:  BCF    0A.2
0034:  ADDWF  02,F
0035:  RETLW  C0
0036:  RETLW  F9
0037:  RETLW  A4
0038:  RETLW  B0
0039:  RETLW  99
003A:  RETLW  92
003B:  RETLW  82
003C:  RETLW  F8
003D:  RETLW  80
003E:  RETLW  90
*
004F:  MOVLW  8E
0050:  MOVWF  77
0051:  MOVF   3B,W
0052:  MOVWF  78
0053:  MOVF   3A,W
0054:  MOVWF  79
0055:  CLRF   7A
0056:  MOVF   78,F
0057:  BTFSS  03.2
0058:  GOTO   063
0059:  MOVF   79,W
005A:  MOVWF  78
005B:  CLRF   79
005C:  MOVLW  08
005D:  SUBWF  77,F
005E:  MOVF   78,F
005F:  BTFSS  03.2
0060:  GOTO   063
0061:  CLRF   77
0062:  GOTO   06B
0063:  BCF    03.0
0064:  BTFSC  78.7
0065:  GOTO   06A
0066:  RLF    79,F
0067:  RLF    78,F
0068:  DECF   77,F
0069:  GOTO   063
006A:  BCF    78.7
006B:  RETURN
*
0080:  CLRF   78
0081:  CLRF   79
0082:  CLRF   77
0083:  CLRF   7A
0084:  MOVF   3B,W
0085:  BTFSS  03.2
0086:  GOTO   08A
0087:  MOVF   3A,W
0088:  BTFSC  03.2
0089:  GOTO   0A4
008A:  MOVLW  10
008B:  MOVWF  3C
008C:  BCF    03.0
008D:  RLF    38,F
008E:  RLF    39,F
008F:  RLF    77,F
0090:  RLF    7A,F
0091:  MOVF   3B,W
0092:  SUBWF  7A,W
0093:  BTFSS  03.2
0094:  GOTO   097
0095:  MOVF   3A,W
0096:  SUBWF  77,W
0097:  BTFSS  03.0
0098:  GOTO   0A0
0099:  MOVF   3A,W
009A:  SUBWF  77,F
009B:  BTFSS  03.0
009C:  DECF   7A,F
009D:  MOVF   3B,W
009E:  SUBWF  7A,F
009F:  BSF    03.0
00A0:  RLF    78,F
00A1:  RLF    79,F
00A2:  DECFSZ 3C,F
00A3:  GOTO   08C
00A4:  RETURN
*
00D0:  MOVF   38,W
00D1:  BTFSC  03.2
00D2:  GOTO   140
00D3:  MOVWF  40
00D4:  MOVF   3C,W
00D5:  BTFSC  03.2
00D6:  GOTO   140
00D7:  ADDWF  40,F
00D8:  BTFSC  03.0
00D9:  GOTO   0E1
00DA:  MOVLW  7F
00DB:  SUBWF  40,F
00DC:  BTFSS  03.0
00DD:  GOTO   140
00DE:  BTFSC  03.2
00DF:  GOTO   140
00E0:  GOTO   0E5
00E1:  MOVLW  81
00E2:  ADDWF  40,F
00E3:  BTFSC  03.0
00E4:  GOTO   140
00E5:  MOVF   40,W
00E6:  MOVWF  77
00E7:  CLRF   78
00E8:  CLRF   79
00E9:  CLRF   7A
00EA:  MOVF   39,W
00EB:  MOVWF  44
00EC:  BSF    44.7
00ED:  MOVF   3A,W
00EE:  MOVWF  43
00EF:  MOVF   3B,W
00F0:  MOVWF  42
00F1:  MOVLW  18
00F2:  MOVWF  40
00F3:  CLRF   41
00F4:  BTFSS  42.0
00F5:  GOTO   10E
00F6:  MOVF   3F,W
00F7:  ADDWF  7A,F
00F8:  BTFSS  03.0
00F9:  GOTO   100
00FA:  INCF   79,F
00FB:  BTFSS  03.2
00FC:  GOTO   100
00FD:  INCF   78,F
00FE:  BTFSC  03.2
00FF:  BSF    41.7
0100:  MOVF   3E,W
0101:  ADDWF  79,F
0102:  BTFSS  03.0
0103:  GOTO   107
0104:  INCF   78,F
0105:  BTFSC  03.2
0106:  BSF    41.7
0107:  MOVF   3D,W
0108:  MOVWF  3A
0109:  BSF    3A.7
010A:  MOVF   3A,W
010B:  ADDWF  78,F
010C:  BTFSC  03.0
010D:  BSF    41.7
010E:  RLF    41,F
010F:  RRF    78,F
0110:  RRF    79,F
0111:  RRF    7A,F
0112:  RRF    44,F
0113:  RRF    43,F
0114:  RRF    42,F
0115:  BCF    03.0
0116:  DECFSZ 40,F
0117:  GOTO   0F3
0118:  MOVLW  01
0119:  ADDWF  77,F
011A:  BTFSC  03.0
011B:  GOTO   140
011C:  BTFSC  78.7
011D:  GOTO   125
011E:  RLF    44,F
011F:  RLF    7A,F
0120:  RLF    79,F
0121:  RLF    78,F
0122:  DECF   77,F
0123:  BTFSC  03.2
0124:  GOTO   140
0125:  BTFSS  44.7
0126:  GOTO   136
0127:  INCF   7A,F
0128:  BTFSS  03.2
0129:  GOTO   136
012A:  INCF   79,F
012B:  BTFSS  03.2
012C:  GOTO   136
012D:  INCF   78,F
012E:  BTFSS  03.2
012F:  GOTO   136
0130:  RRF    78,F
0131:  RRF    79,F
0132:  RRF    7A,F
0133:  INCF   77,F
0134:  BTFSC  03.2
0135:  GOTO   140
0136:  MOVF   39,W
0137:  MOVWF  41
0138:  MOVF   3D,W
0139:  XORWF  41,F
013A:  BTFSS  41.7
013B:  GOTO   13E
013C:  BSF    78.7
013D:  GOTO   144
013E:  BCF    78.7
013F:  GOTO   144
0140:  CLRF   77
0141:  CLRF   78
0142:  CLRF   79
0143:  CLRF   7A
*
0162:  MOVLW  80
0163:  BTFSC  03.1
0164:  XORWF  3F,F
0165:  CLRF   44
0166:  CLRF   45
0167:  MOVF   3B,W
0168:  MOVWF  43
0169:  MOVF   3F,W
016A:  XORWF  43,F
016B:  MOVF   3A,W
016C:  BTFSC  03.2
016D:  GOTO   252
016E:  MOVWF  42
016F:  MOVWF  77
0170:  MOVF   3E,W
0171:  BTFSC  03.2
0172:  GOTO   25B
0173:  SUBWF  42,F
0174:  BTFSC  03.2
0175:  GOTO   1F7
0176:  BTFSS  03.0
0177:  GOTO   1B5
0178:  MOVF   3F,W
0179:  MOVWF  48
017A:  BSF    48.7
017B:  MOVF   40,W
017C:  MOVWF  47
017D:  MOVF   41,W
017E:  MOVWF  46
017F:  CLRF   45
0180:  BCF    03.0
0181:  RRF    48,F
0182:  RRF    47,F
0183:  RRF    46,F
0184:  RRF    45,F
0185:  DECFSZ 42,F
0186:  GOTO   17F
0187:  BTFSS  43.7
0188:  GOTO   18C
0189:  BSF    44.0
018A:  GOTO   26F
018B:  BCF    44.0
018C:  BCF    42.0
018D:  BSF    44.4
018E:  MOVLW  3D
018F:  MOVWF  04
0190:  BCF    03.7
0191:  GOTO   284
0192:  BCF    44.4
0193:  BTFSC  43.7
0194:  GOTO   19F
0195:  BTFSS  42.0
0196:  GOTO   1AA
0197:  RRF    48,F
0198:  RRF    47,F
0199:  RRF    46,F
019A:  RRF    45,F
019B:  INCF   77,F
019C:  BTFSC  03.2
019D:  GOTO   26A
019E:  GOTO   1AA
019F:  BTFSC  48.7
01A0:  GOTO   1AD
01A1:  BCF    03.0
01A2:  RLF    45,F
01A3:  RLF    46,F
01A4:  RLF    47,F
01A5:  RLF    48,F
01A6:  DECF   77,F
01A7:  BTFSC  03.2
01A8:  GOTO   26A
01A9:  GOTO   19F
01AA:  BSF    44.6
01AB:  GOTO   217
01AC:  BCF    44.6
01AD:  MOVF   3B,W
01AE:  MOVWF  43
01AF:  BTFSS  43.7
01B0:  GOTO   1B3
01B1:  BSF    48.7
01B2:  GOTO   263
01B3:  BCF    48.7
01B4:  GOTO   263
01B5:  MOVF   3E,W
01B6:  MOVWF  42
01B7:  MOVWF  77
01B8:  MOVF   3A,W
01B9:  SUBWF  42,F
01BA:  MOVF   3B,W
01BB:  MOVWF  48
01BC:  BSF    48.7
01BD:  MOVF   3C,W
01BE:  MOVWF  47
01BF:  MOVF   3D,W
01C0:  MOVWF  46
01C1:  CLRF   45
01C2:  BCF    03.0
01C3:  RRF    48,F
01C4:  RRF    47,F
01C5:  RRF    46,F
01C6:  RRF    45,F
01C7:  DECFSZ 42,F
01C8:  GOTO   1C1
01C9:  BTFSS  43.7
01CA:  GOTO   1CE
01CB:  BSF    44.1
01CC:  GOTO   26F
01CD:  BCF    44.1
01CE:  BCF    42.0
01CF:  BSF    44.5
01D0:  MOVLW  41
01D1:  MOVWF  04
01D2:  BCF    03.7
01D3:  GOTO   284
01D4:  BCF    44.5
01D5:  BTFSC  43.7
01D6:  GOTO   1E1
01D7:  BTFSS  42.0
01D8:  GOTO   1EC
01D9:  RRF    48,F
01DA:  RRF    47,F
01DB:  RRF    46,F
01DC:  RRF    45,F
01DD:  INCF   77,F
01DE:  BTFSC  03.2
01DF:  GOTO   26A
01E0:  GOTO   1EC
01E1:  BTFSC  48.7
01E2:  GOTO   1EF
01E3:  BCF    03.0
01E4:  RLF    45,F
01E5:  RLF    46,F
01E6:  RLF    47,F
01E7:  RLF    48,F
01E8:  DECF   77,F
01E9:  BTFSC  03.2
01EA:  GOTO   26A
01EB:  GOTO   1E1
01EC:  BSF    44.7
01ED:  GOTO   217
01EE:  BCF    44.7
01EF:  MOVF   3F,W
01F0:  MOVWF  43
01F1:  BTFSS  43.7
01F2:  GOTO   1F5
01F3:  BSF    48.7
01F4:  GOTO   263
01F5:  BCF    48.7
01F6:  GOTO   263
01F7:  MOVF   3F,W
01F8:  MOVWF  48
01F9:  BSF    48.7
01FA:  MOVF   40,W
01FB:  MOVWF  47
01FC:  MOVF   41,W
01FD:  MOVWF  46
01FE:  BTFSS  43.7
01FF:  GOTO   204
0200:  BCF    48.7
0201:  BSF    44.2
0202:  GOTO   26F
0203:  BCF    44.2
0204:  CLRF   45
0205:  BCF    42.0
0206:  MOVLW  3D
0207:  MOVWF  04
0208:  BCF    03.7
0209:  GOTO   284
020A:  BTFSC  43.7
020B:  GOTO   22D
020C:  MOVF   3B,W
020D:  MOVWF  43
020E:  BTFSS  42.0
020F:  GOTO   217
0210:  RRF    48,F
0211:  RRF    47,F
0212:  RRF    46,F
0213:  RRF    45,F
0214:  INCF   77,F
0215:  BTFSC  03.2
0216:  GOTO   26A
0217:  BTFSS  45.7
0218:  GOTO   228
0219:  INCF   46,F
021A:  BTFSS  03.2
021B:  GOTO   228
021C:  INCF   47,F
021D:  BTFSS  03.2
021E:  GOTO   228
021F:  INCF   48,F
0220:  BTFSS  03.2
0221:  GOTO   228
0222:  RRF    48,F
0223:  RRF    47,F
0224:  RRF    46,F
0225:  INCF   77,F
0226:  BTFSC  03.2
0227:  GOTO   26A
0228:  BTFSC  44.6
0229:  GOTO   1AC
022A:  BTFSC  44.7
022B:  GOTO   1EE
022C:  GOTO   24C
022D:  MOVLW  80
022E:  XORWF  48,F
022F:  BTFSS  48.7
0230:  GOTO   235
0231:  GOTO   26F
0232:  MOVF   3F,W
0233:  MOVWF  43
0234:  GOTO   242
0235:  MOVF   3B,W
0236:  MOVWF  43
0237:  MOVF   48,F
0238:  BTFSS  03.2
0239:  GOTO   242
023A:  MOVF   47,F
023B:  BTFSS  03.2
023C:  GOTO   242
023D:  MOVF   46,F
023E:  BTFSS  03.2
023F:  GOTO   242
0240:  CLRF   77
0241:  GOTO   263
0242:  BTFSC  48.7
0243:  GOTO   24C
0244:  BCF    03.0
0245:  RLF    45,F
0246:  RLF    46,F
0247:  RLF    47,F
0248:  RLF    48,F
0249:  DECFSZ 77,F
024A:  GOTO   242
024B:  GOTO   26A
024C:  BTFSS  43.7
024D:  GOTO   250
024E:  BSF    48.7
024F:  GOTO   263
0250:  BCF    48.7
0251:  GOTO   263
0252:  MOVF   3E,W
0253:  MOVWF  77
0254:  MOVF   3F,W
0255:  MOVWF  48
0256:  MOVF   40,W
0257:  MOVWF  47
0258:  MOVF   41,W
0259:  MOVWF  46
025A:  GOTO   263
025B:  MOVF   3A,W
025C:  MOVWF  77
025D:  MOVF   3B,W
025E:  MOVWF  48
025F:  MOVF   3C,W
0260:  MOVWF  47
0261:  MOVF   3D,W
0262:  MOVWF  46
0263:  MOVF   48,W
0264:  MOVWF  78
0265:  MOVF   47,W
0266:  MOVWF  79
0267:  MOVF   46,W
0268:  MOVWF  7A
0269:  GOTO   2A2
026A:  CLRF   77
026B:  CLRF   78
026C:  CLRF   79
026D:  CLRF   7A
026E:  GOTO   2A2
026F:  CLRF   45
0270:  COMF   46,F
0271:  COMF   47,F
0272:  COMF   48,F
0273:  COMF   45,F
0274:  INCF   45,F
0275:  BTFSS  03.2
0276:  GOTO   27D
0277:  INCF   46,F
0278:  BTFSS  03.2
0279:  GOTO   27D
027A:  INCF   47,F
027B:  BTFSC  03.2
027C:  INCF   48,F
027D:  BTFSC  44.0
027E:  GOTO   18B
027F:  BTFSC  44.1
0280:  GOTO   1CD
0281:  BTFSC  44.2
0282:  GOTO   203
0283:  GOTO   232
0284:  MOVF   00,W
0285:  ADDWF  46,F
0286:  BTFSS  03.0
0287:  GOTO   28E
0288:  INCF   47,F
0289:  BTFSS  03.2
028A:  GOTO   28E
028B:  INCF   48,F
028C:  BTFSC  03.2
028D:  BSF    42.0
028E:  DECF   04,F
028F:  MOVF   00,W
0290:  ADDWF  47,F
0291:  BTFSS  03.0
0292:  GOTO   296
0293:  INCF   48,F
0294:  BTFSC  03.2
0295:  BSF    42.0
0296:  DECF   04,F
0297:  MOVF   00,W
0298:  BTFSS  00.7
0299:  XORLW  80
029A:  ADDWF  48,F
029B:  BTFSC  03.0
029C:  BSF    42.0
029D:  BTFSC  44.4
029E:  GOTO   192
029F:  BTFSC  44.5
02A0:  GOTO   1D4
02A1:  GOTO   20A
*
02AA:  MOVLW  8E
02AB:  MOVWF  77
02AC:  MOVF   3A,W
02AD:  SUBWF  77,F
02AE:  MOVF   3B,W
02AF:  MOVWF  79
02B0:  MOVF   3C,W
02B1:  MOVWF  78
02B2:  BSF    79.7
02B3:  MOVF   77,F
02B4:  BTFSC  03.2
02B5:  GOTO   2C1
02B6:  BCF    03.0
02B7:  MOVF   79,F
02B8:  BTFSS  03.2
02B9:  GOTO   2BD
02BA:  MOVF   78,F
02BB:  BTFSC  03.2
02BC:  GOTO   2C1
02BD:  RRF    79,F
02BE:  RRF    78,F
02BF:  DECFSZ 77,F
02C0:  GOTO   2B6
02C1:  BTFSS  3B.7
02C2:  GOTO   2C8
02C3:  COMF   78,F
02C4:  COMF   79,F
02C5:  INCF   78,F
02C6:  BTFSC  03.2
02C7:  INCF   79,F
....................  
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses hs 
.................... #use delay(clock=20M) 
*
006C:  MOVLW  36
006D:  MOVWF  04
006E:  BCF    03.7
006F:  MOVF   00,W
0070:  BTFSC  03.2
0071:  GOTO   07F
0072:  MOVLW  06
0073:  MOVWF  78
0074:  CLRF   77
0075:  DECFSZ 77,F
0076:  GOTO   075
0077:  DECFSZ 78,F
0078:  GOTO   074
0079:  MOVLW  7B
007A:  MOVWF  77
007B:  DECFSZ 77,F
007C:  GOTO   07B
007D:  DECFSZ 00,F
007E:  GOTO   072
007F:  RETURN
.................... #use RS232 (baud =9600,xmit=pin_c6, rcv=pin_c7) 
....................  
.................... #define BTA0   pin_b0 
.................... #define BTA1   pin_b1 
.................... #define BTA2   pin_b2 
.................... #define BTA3   pin_b3 
....................  
.................... const unsigned int8 m7d[10]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90}; 
.................... unsigned int16 temp, i, sum_temp, counter, counter_chuc, counter_dvi, rcv_data; 
....................  
.................... void do_nhiet_do() 
.................... { 
....................    sum_temp=0; 
*
00A5:  CLRF   2C
00A6:  CLRF   2B
....................    for(i=0;i<10;i++)//do nhiet do trung binh 10 lan 
00A7:  CLRF   2A
00A8:  CLRF   29
00A9:  MOVF   2A,F
00AA:  BTFSS  03.2
00AB:  GOTO   2D3
00AC:  MOVF   29,W
00AD:  SUBLW  09
00AE:  BTFSS  03.0
00AF:  GOTO   2D3
....................    { 
....................       sum_temp = sum_temp + read_adc()*0.4887; 
00B0:  BSF    1F.1
00B1:  BTFSC  1F.1
00B2:  GOTO   0B1
00B3:  MOVF   1E,W
00B4:  MOVWF  7A
00B5:  BSF    03.5
00B6:  MOVF   1E,W
00B7:  BCF    03.5
00B8:  MOVWF  36
00B9:  MOVF   7A,W
00BA:  MOVWF  37
00BB:  MOVF   37,W
00BC:  MOVWF  3B
00BD:  MOVF   36,W
00BE:  MOVWF  3A
00BF:  CALL   04F
00C0:  MOVF   7A,W
00C1:  MOVWF  3B
00C2:  MOVF   79,W
00C3:  MOVWF  3A
00C4:  MOVF   78,W
00C5:  MOVWF  39
00C6:  MOVF   77,W
00C7:  MOVWF  38
00C8:  MOVLW  E3
00C9:  MOVWF  3F
00CA:  MOVLW  36
00CB:  MOVWF  3E
00CC:  MOVLW  7A
00CD:  MOVWF  3D
00CE:  MOVLW  7D
00CF:  MOVWF  3C
*
0144:  MOVF   7A,W
0145:  MOVWF  39
0146:  MOVF   79,W
0147:  MOVWF  38
0148:  MOVF   78,W
0149:  MOVWF  37
014A:  MOVF   77,W
014B:  MOVWF  36
014C:  MOVF   2C,W
014D:  MOVWF  3B
014E:  MOVF   2B,W
014F:  MOVWF  3A
0150:  CALL   04F
0151:  BCF    03.1
0152:  MOVF   7A,W
0153:  MOVWF  3D
0154:  MOVF   79,W
0155:  MOVWF  3C
0156:  MOVF   78,W
0157:  MOVWF  3B
0158:  MOVF   77,W
0159:  MOVWF  3A
015A:  MOVF   39,W
015B:  MOVWF  41
015C:  MOVF   38,W
015D:  MOVWF  40
015E:  MOVF   37,W
015F:  MOVWF  3F
0160:  MOVF   36,W
0161:  MOVWF  3E
*
02A2:  MOVF   7A,W
02A3:  MOVWF  3D
02A4:  MOVF   79,W
02A5:  MOVWF  3C
02A6:  MOVF   78,W
02A7:  MOVWF  3B
02A8:  MOVF   77,W
02A9:  MOVWF  3A
*
02C8:  MOVF   79,W
02C9:  MOVWF  2C
02CA:  MOVF   78,W
02CB:  MOVWF  2B
....................       delay_ms(1); 
02CC:  MOVLW  01
02CD:  MOVWF  36
02CE:  CALL   06C
02CF:  INCF   29,F
02D0:  BTFSC  03.2
02D1:  INCF   2A,F
02D2:  GOTO   0A9
....................    } 
....................    temp = sum_temp/10; 
02D3:  MOVF   2C,W
02D4:  MOVWF  39
02D5:  MOVF   2B,W
02D6:  MOVWF  38
02D7:  CLRF   3B
02D8:  MOVLW  0A
02D9:  MOVWF  3A
02DA:  CALL   080
02DB:  MOVF   79,W
02DC:  MOVWF  28
02DD:  MOVF   78,W
02DE:  MOVWF  27
....................     
....................    output_d(m7d[temp/1%10]); 
02DF:  MOVF   28,W
02E0:  MOVWF  39
02E1:  MOVF   27,W
02E2:  MOVWF  38
02E3:  CLRF   3B
02E4:  MOVLW  0A
02E5:  MOVWF  3A
02E6:  CALL   080
02E7:  MOVF   77,W
02E8:  MOVWF  36
02E9:  MOVF   7A,W
02EA:  MOVWF  37
02EB:  MOVWF  7A
02EC:  MOVF   77,W
02ED:  CALL   031
02EE:  MOVWF  38
02EF:  BSF    03.5
02F0:  CLRF   08
02F1:  BCF    03.5
02F2:  MOVF   38,W
02F3:  MOVWF  08
....................    output_low(pin_c3); 
02F4:  BCF    35.3
02F5:  MOVF   35,W
02F6:  BSF    03.5
02F7:  MOVWF  07
02F8:  BCF    03.5
02F9:  BCF    07.3
....................    delay_ms(1); 
02FA:  MOVLW  01
02FB:  MOVWF  36
02FC:  CALL   06C
....................    output_high(pin_c3); 
02FD:  BCF    35.3
02FE:  MOVF   35,W
02FF:  BSF    03.5
0300:  MOVWF  07
0301:  BCF    03.5
0302:  BSF    07.3
....................     
....................    output_d(m7d[temp/10%10]); 
0303:  MOVF   28,W
0304:  MOVWF  39
0305:  MOVF   27,W
0306:  MOVWF  38
0307:  CLRF   3B
0308:  MOVLW  0A
0309:  MOVWF  3A
030A:  CALL   080
030B:  MOVF   79,W
030C:  MOVWF  37
030D:  MOVF   78,W
030E:  MOVWF  36
030F:  MOVF   79,W
0310:  MOVWF  39
0311:  MOVF   78,W
0312:  MOVWF  38
0313:  CLRF   3B
0314:  MOVLW  0A
0315:  MOVWF  3A
0316:  CALL   080
0317:  MOVF   77,W
0318:  MOVWF  36
0319:  MOVF   7A,W
031A:  MOVWF  37
031B:  MOVWF  7A
031C:  MOVF   77,W
031D:  CALL   031
031E:  MOVWF  38
031F:  BSF    03.5
0320:  CLRF   08
0321:  BCF    03.5
0322:  MOVF   38,W
0323:  MOVWF  08
....................    output_low(pin_c2); 
0324:  BCF    35.2
0325:  MOVF   35,W
0326:  BSF    03.5
0327:  MOVWF  07
0328:  BCF    03.5
0329:  BCF    07.2
....................    delay_ms(1); 
032A:  MOVLW  01
032B:  MOVWF  36
032C:  CALL   06C
....................    output_high(pin_c2); 
032D:  BCF    35.2
032E:  MOVF   35,W
032F:  BSF    03.5
0330:  MOVWF  07
0331:  BCF    03.5
0332:  BSF    07.2
0333:  BCF    0A.3
0334:  BCF    0A.4
0335:  GOTO   41F (RETURN)
.................... } 
....................  
.................... void dem_san_pham() 
.................... { 
....................    counter = get_timer0(); 
0336:  MOVF   01,W
0337:  CLRF   2E
0338:  MOVWF  2D
....................    if(counter>99)    set_timer0(0); 
0339:  MOVF   2E,F
033A:  BTFSS  03.2
033B:  GOTO   33F
033C:  MOVF   2D,W
033D:  SUBLW  63
033E:  BTFSS  03.0
033F:  CLRF   01
....................     
....................    counter_chuc = m7d[counter/10%10]; 
0340:  MOVF   2E,W
0341:  MOVWF  39
0342:  MOVF   2D,W
0343:  MOVWF  38
0344:  CLRF   3B
0345:  MOVLW  0A
0346:  MOVWF  3A
0347:  CALL   080
0348:  MOVF   79,W
0349:  MOVWF  37
034A:  MOVF   78,W
034B:  MOVWF  36
034C:  MOVF   79,W
034D:  MOVWF  39
034E:  MOVF   78,W
034F:  MOVWF  38
0350:  CLRF   3B
0351:  MOVLW  0A
0352:  MOVWF  3A
0353:  CALL   080
0354:  MOVF   77,W
0355:  MOVWF  36
0356:  MOVF   7A,W
0357:  MOVWF  37
0358:  MOVWF  7A
0359:  MOVF   77,W
035A:  CALL   031
035B:  MOVWF  78
035C:  CLRF   7A
035D:  MOVF   78,W
035E:  MOVWF  2F
035F:  MOVF   7A,W
0360:  MOVWF  30
....................    counter_dvi = m7d[counter/1%10]; 
0361:  MOVF   2E,W
0362:  MOVWF  39
0363:  MOVF   2D,W
0364:  MOVWF  38
0365:  CLRF   3B
0366:  MOVLW  0A
0367:  MOVWF  3A
0368:  CALL   080
0369:  MOVF   77,W
036A:  MOVWF  36
036B:  MOVF   7A,W
036C:  MOVWF  37
036D:  MOVWF  7A
036E:  MOVF   77,W
036F:  CALL   031
0370:  MOVWF  78
0371:  CLRF   7A
0372:  MOVF   78,W
0373:  MOVWF  31
0374:  MOVF   7A,W
0375:  MOVWF  32
....................    if(counter_chuc == 0xc0)   counter_chuc = 0xff; 
0376:  MOVF   2F,W
0377:  SUBLW  C0
0378:  BTFSS  03.2
0379:  GOTO   380
037A:  MOVF   30,F
037B:  BTFSS  03.2
037C:  GOTO   380
037D:  CLRF   30
037E:  MOVLW  FF
037F:  MOVWF  2F
....................     
....................    output_d(counter_dvi); 
0380:  BSF    03.5
0381:  CLRF   08
0382:  BCF    03.5
0383:  MOVF   31,W
0384:  MOVWF  08
....................    output_low(pin_c1); 
0385:  BCF    35.1
0386:  MOVF   35,W
0387:  BSF    03.5
0388:  MOVWF  07
0389:  BCF    03.5
038A:  BCF    07.1
....................    delay_ms(1); 
038B:  MOVLW  01
038C:  MOVWF  36
038D:  CALL   06C
....................    output_high(pin_c1); 
038E:  BCF    35.1
038F:  MOVF   35,W
0390:  BSF    03.5
0391:  MOVWF  07
0392:  BCF    03.5
0393:  BSF    07.1
....................     
....................    output_d(counter_chuc); 
0394:  BSF    03.5
0395:  CLRF   08
0396:  BCF    03.5
0397:  MOVF   2F,W
0398:  MOVWF  08
....................    output_low(pin_c0); 
0399:  BCF    35.0
039A:  MOVF   35,W
039B:  BSF    03.5
039C:  MOVWF  07
039D:  BCF    03.5
039E:  BCF    07.0
....................    delay_ms(1); 
039F:  MOVLW  01
03A0:  MOVWF  36
03A1:  CALL   06C
....................    output_high(pin_c0); 
03A2:  BCF    35.0
03A3:  MOVF   35,W
03A4:  BSF    03.5
03A5:  MOVWF  07
03A6:  BCF    03.5
03A7:  BSF    07.0
03A8:  BCF    0A.3
03A9:  BCF    0A.4
03AA:  GOTO   420 (RETURN)
.................... } 
....................  
.................... void nut_nhan() 
.................... { 
....................    if(input(BTA0) == 0)    putc(0xA0); 
03AB:  BSF    03.5
03AC:  BSF    06.0
03AD:  BCF    03.5
03AE:  BTFSC  06.0
03AF:  GOTO   3B4
03B0:  MOVLW  A0
03B1:  BTFSS  0C.4
03B2:  GOTO   3B1
03B3:  MOVWF  19
....................    if(input(BTA1) == 0)    putc(0xA1); 
03B4:  BSF    03.5
03B5:  BSF    06.1
03B6:  BCF    03.5
03B7:  BTFSC  06.1
03B8:  GOTO   3BD
03B9:  MOVLW  A1
03BA:  BTFSS  0C.4
03BB:  GOTO   3BA
03BC:  MOVWF  19
....................    if(input(BTA2) == 0)    putc(0xA2); 
03BD:  BSF    03.5
03BE:  BSF    06.2
03BF:  BCF    03.5
03C0:  BTFSC  06.2
03C1:  GOTO   3C6
03C2:  MOVLW  A2
03C3:  BTFSS  0C.4
03C4:  GOTO   3C3
03C5:  MOVWF  19
....................    if(input(BTA3) == 0)    putc(0xA3); 
03C6:  BSF    03.5
03C7:  BSF    06.3
03C8:  BCF    03.5
03C9:  BTFSC  06.3
03CA:  GOTO   3CF
03CB:  MOVLW  A3
03CC:  BTFSS  0C.4
03CD:  GOTO   3CC
03CE:  MOVWF  19
03CF:  BCF    0A.3
03D0:  BCF    0A.4
03D1:  GOTO   421 (RETURN)
.................... } 
....................  
.................... void main() 
03D2:  MOVF   03,W
03D3:  ANDLW  1F
03D4:  MOVWF  03
03D5:  BSF    03.5
03D6:  BSF    03.6
03D7:  BSF    07.3
03D8:  MOVLW  08
03D9:  BCF    03.6
03DA:  MOVWF  19
03DB:  MOVLW  02
03DC:  MOVWF  1A
03DD:  MOVLW  A6
03DE:  MOVWF  18
03DF:  MOVLW  90
03E0:  BCF    03.5
03E1:  MOVWF  18
03E2:  MOVLW  FF
03E3:  MOVWF  35
03E4:  BSF    03.5
03E5:  BSF    03.6
03E6:  MOVF   09,W
03E7:  ANDLW  C0
03E8:  MOVWF  09
03E9:  BCF    03.6
03EA:  BCF    1F.4
03EB:  BCF    1F.5
03EC:  MOVLW  00
03ED:  BSF    03.6
03EE:  MOVWF  08
03EF:  BCF    03.5
03F0:  CLRF   07
03F1:  CLRF   08
03F2:  CLRF   09
03F3:  BCF    03.7
.................... { 
....................    set_tris_c(0x80); 
03F4:  MOVLW  80
03F5:  BSF    03.5
03F6:  BCF    03.6
03F7:  MOVWF  07
03F8:  BCF    03.5
03F9:  MOVWF  35
....................    set_tris_d(0); 
03FA:  MOVLW  00
03FB:  BSF    03.5
03FC:  MOVWF  08
....................    set_tris_a(0xff); 
03FD:  MOVLW  FF
03FE:  MOVWF  05
....................    set_tris_b(0xff); 
03FF:  MOVWF  06
....................     
....................    setup_adc(adc_clock_div_32); 
0400:  BCF    03.5
0401:  BCF    1F.6
0402:  BSF    1F.7
0403:  BSF    03.5
0404:  BSF    1F.7
0405:  BCF    03.5
0406:  BSF    1F.0
....................    setup_adc_ports(san0 | vss_vdd); 
0407:  BSF    03.5
0408:  BSF    03.6
0409:  MOVF   09,W
040A:  ANDLW  C0
040B:  MOVWF  09
040C:  BCF    03.6
040D:  BCF    1F.4
040E:  BCF    1F.5
040F:  MOVLW  01
0410:  BSF    03.6
0411:  MOVWF  08
....................     
....................    setup_timer_0(T0_EXT_H_TO_L | T0_DIV_1); 
0412:  BCF    03.6
0413:  MOVF   01,W
0414:  ANDLW  C7
0415:  IORLW  38
0416:  MOVWF  01
....................    set_timer0(0); 
0417:  BCF    03.5
0418:  CLRF   01
....................     
....................    enable_interrupts(global); 
0419:  MOVLW  C0
041A:  IORWF  0B,F
....................    enable_interrupts(int_rda); 
041B:  BSF    03.5
041C:  BSF    0C.5
....................     
....................    while(true) 
....................    { 
....................       do_nhiet_do(); 
041D:  BCF    03.5
041E:  GOTO   0A5
....................       dem_san_pham(); 
041F:  GOTO   336
....................       nut_nhan(); 
0420:  GOTO   3AB
0421:  GOTO   41E
....................    } 
.................... } 
....................  
.................... #int_rda 
.................... void rcv_data_interrupt() 
0422:  SLEEP
.................... { 
....................    rcv_data = getc(); 
*
003F:  BTFSS  0C.5
0040:  GOTO   03F
0041:  MOVF   1A,W
0042:  CLRF   34
0043:  MOVWF  33
....................    if(rcv_data==0xBB) set_timer0(0);  
0044:  MOVF   33,W
0045:  SUBLW  BB
0046:  BTFSS  03.2
0047:  GOTO   04B
0048:  MOVF   34,F
0049:  BTFSC  03.2
004A:  CLRF   01
004B:  BCF    0C.5
004C:  BCF    0A.3
004D:  BCF    0A.4
004E:  GOTO   01D
.................... } 
....................  

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
