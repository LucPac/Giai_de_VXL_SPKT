CCS PCM C Compiler, Version 5.015, 5967               05-Jul-25 10:29

               Filename:   E:\University\Nam 3\2024_2025_HK2\Vi xu ly\Giai_de_vxl_hk2_2025\Cau1\Cau1.lst

               ROM used:   135 words (2%)
                           Largest free fragment is 2048
               RAM used:   7 (2%) at main() level
                           8 (2%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   054
0003:  NOP
.................... #include <16f887.h> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
....................  
.................... #list 
....................  
.................... #fuses intrc_io 
.................... #use delay(clock=8M) 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  02
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  97
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
....................  
.................... #define SW pin_e0 
.................... #define BT pin_b7 
.................... #define L1 pin_c0 
....................  
.................... int mode = 0; 
.................... void button() 
.................... { 
....................    if(input(SW) == 1)     
0018:  BSF    03.5
0019:  BSF    09.0
001A:  BCF    03.5
001B:  BTFSS  09.0
001C:  GOTO   01F
....................    { 
....................       mode = 0; 
001D:  CLRF   20
....................    } 
001E:  GOTO   038
....................    else if(input(SW) == 0) 
001F:  BSF    03.5
0020:  BSF    09.0
0021:  BCF    03.5
0022:  BTFSC  09.0
0023:  GOTO   038
....................    { 
....................       if(input(BT) == 0) 
0024:  BSF    03.5
0025:  BSF    06.7
0026:  BCF    03.5
0027:  BTFSC  06.7
0028:  GOTO   033
....................       { 
....................          delay_ms(20); 
0029:  MOVLW  14
002A:  MOVWF  22
002B:  CALL   004
....................          if(input(BT) == 0) 
002C:  BSF    03.5
002D:  BSF    06.7
002E:  BCF    03.5
002F:  BTFSC  06.7
0030:  GOTO   033
....................          { 
....................             mode = 1; 
0031:  MOVLW  01
0032:  MOVWF  20
....................          } 
....................       }while(input(BT) == 0); 
0033:  BSF    03.5
0034:  BSF    06.7
0035:  BCF    03.5
0036:  BTFSS  06.7
0037:  GOTO   033
....................    }  
0038:  BCF    0A.3
0039:  BCF    0A.4
003A:  GOTO   084 (RETURN)
.................... } 
....................  
.................... void sel_mode() 
.................... { 
....................    if(mode == 0) 
003B:  MOVF   20,F
003C:  BTFSS  03.2
003D:  GOTO   045
....................    { 
....................       output_low(L1); 
003E:  BCF    21.0
003F:  MOVF   21,W
0040:  BSF    03.5
0041:  MOVWF  07
0042:  BCF    03.5
0043:  BCF    07.0
....................    } 
0044:  GOTO   051
....................    else if(mode == 1) 
0045:  DECFSZ 20,W
0046:  GOTO   051
....................    { 
....................       output_toggle(L1); 
0047:  BCF    21.0
0048:  MOVF   21,W
0049:  BSF    03.5
004A:  MOVWF  07
004B:  MOVLW  01
004C:  BCF    03.5
004D:  XORWF  07,F
....................       delay_ms(100); 
004E:  MOVLW  64
004F:  MOVWF  22
0050:  CALL   004
....................    } 
0051:  BCF    0A.3
0052:  BCF    0A.4
0053:  GOTO   085 (RETURN)
.................... } 
....................  
.................... void main() 
0054:  MOVF   03,W
0055:  ANDLW  1F
0056:  MOVWF  03
0057:  MOVLW  71
0058:  BSF    03.5
0059:  MOVWF  0F
005A:  MOVF   0F,W
005B:  BCF    03.5
005C:  CLRF   20
005D:  MOVLW  FF
005E:  MOVWF  21
005F:  BSF    03.5
0060:  BSF    03.6
0061:  MOVF   09,W
0062:  ANDLW  C0
0063:  MOVWF  09
0064:  BCF    03.6
0065:  BCF    1F.4
0066:  BCF    1F.5
0067:  MOVLW  00
0068:  BSF    03.6
0069:  MOVWF  08
006A:  BCF    03.5
006B:  CLRF   07
006C:  CLRF   08
006D:  CLRF   09
006E:  BCF    03.7
.................... { 
....................    set_tris_c(0); 
006F:  MOVLW  00
0070:  BSF    03.5
0071:  BCF    03.6
0072:  MOVWF  07
0073:  BCF    03.5
0074:  MOVWF  21
....................    set_tris_b(0xff); 
0075:  MOVLW  FF
0076:  BSF    03.5
0077:  MOVWF  06
....................    set_tris_e(0xff); 
0078:  BSF    09.0
0079:  BSF    09.1
007A:  BSF    09.2
007B:  BSF    09.3
....................     
....................    output_low(L1); 
007C:  BCF    03.5
007D:  BCF    21.0
007E:  MOVF   21,W
007F:  BSF    03.5
0080:  MOVWF  07
0081:  BCF    03.5
0082:  BCF    07.0
....................     
....................    while(true) 
....................    { 
....................       button(); 
0083:  GOTO   018
....................       sel_mode(); 
0084:  GOTO   03B
0085:  GOTO   083
....................    } 
.................... } 
0086:  SLEEP

Configuration Fuses:
   Word  1: 2FE4   INTRC_IO NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
